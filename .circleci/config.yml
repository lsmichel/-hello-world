# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    working_directory: /tmp
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      steps:
      - checkout
      - run:
          command: find . -name 'pom.xml' | sort | xargs cat > /tmp/maven_cache_seed
          working_directory: ~/project/my-app
      - restore_cache:
          key: circleci-java-maven-{{ checksum "/tmp/maven_cache_seed" }}
      - run: 
          name: build
          command: mvn package -DskipTests
          working_directory: ~/project/my-app          
      - save_cache:
          paths:
            - ~/.m2/repository
          key: circleci-java-maven-{{ checksum "/tmp/maven_cache_seed" }}
      - store_test_results:
          path: ~/project/my-app/target/surefire-reports
      - store_artifacts:
          path: ~/project/my-app/target/my-app-1.0-SNAPSHOT.jar
      


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
